name: Pipeline de Build e Push do Agente


on:

  push:
    branches: [ "main" ]

  pull_request:
    branches: [ "main" ]

# Define os "trabalhos" (jobs) que a pipeline executará
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # A sequência de passos que o job executará
    steps:
      # 1. Checkout do Código
      # Baixa o código do seu repositório para a máquina virtual do Actions
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      # 2. Lint do Código Python
      # Verifica a qualidade do código do agente antes de construir a imagem
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Instalar dependências de lint
        run: pip install flake8
      - name: Rodar Flake8
        # --count mostra o total de erros/avisos
        run: flake8 agent/ --count --show-source --statistics

      # 3. Login no GitHub Container Registry (GHCR)
      # Autentica na "Docker Hub" do GitHub para poder enviar a imagem
      - name: Login no GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # 4. Configurar o Docker Buildx
      # Uma ferramenta que otimiza a construção de imagens Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5. Construir e Publicar a Imagem Docker
      # O passo principal: constrói a imagem do agente e a envia para o GHCR
      - name: Build e Push da imagem do agente
        uses: docker/build-push-action@v4
        with:
          # Contexto: a pasta que contém o Dockerfile e o código do agente
          context: ./agent
          # Caminho para o Dockerfile
          file: ./agent/Dockerfile
          # 'true' significa que queremos enviar (push) a imagem para o registro
          push: true
          
          tags: ghcr.io/${{ github.repository }}/viaipe-agent:latest